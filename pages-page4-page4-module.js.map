{"version":3,"sources":["./src/app/pages/page4/page4.module.ts","./src/app/pages/page4/page4-routing.module.ts","./src/app/pages/page4/page4.component.ts","./src/app/pages/page4/page4.component.html"],"names":[],"mappings":"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","file":"pages-page4-page4-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Page4RoutingModule } from './page4-routing.module';\nimport { Page4Component } from './page4.component';\n\n\n@NgModule({\n  declarations: [Page4Component],\n  imports: [\n    CommonModule,\n    Page4RoutingModule\n  ]\n})\nexport class Page4Module { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Page4Component } from './page4.component';\n\nconst routes: Routes = [{ path: '', component: Page4Component }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Page4RoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page4',\n  templateUrl: './page4.component.html',\n  styleUrls: ['./page4.component.css']\n})\nexport class Page4Component implements OnInit {\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  OnBack(){\n    this.router.navigate(['page3']);\n  }\n  OnNext(){\n    this.router.navigate(['frizo']);  \n  }\n  OnInicio(){\n    this.router.navigate(['frizo']);\n  }\n}","<div class=\"container\">\n    <div class=\"container\">\n        <div class=\"header\" (click)=\"OnInicio()\">\n            <h2>Aministrador de Procesos</h2>\n        </div>\n    </div>\n    <div class=\"body\">\n        <div class=\"row\">\n            <div class=\"col-md-1 atras\">\n                <button class=\"bi bi-caret-left btn btn-info btn btn-block btatras\" (click)=\"OnBack()\"></button>\n            </div>\n            <div class=\"col-md-10\">\n                <div class=\"row\">\n                    <p style=\"text-align: justify;\">\n                        El núcleo debe encargarse entonces de administrar los recursos del hardware del \n                        computador para que sean asignados convenientemente a los procesos\n                    </p>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-5\">\n                        <h4>Scheduling de Procesos            </h4>\n                        <p style=\"text-align: justify;\">En la mayoría de los sistemas computacionales existe un solo procesador real. Por lo tanto el núcleo \n                            debe asignar el procesador por turnos a los numerosos procesos que pueden estar activos. Hay distintas\n                            estrategias para asignar estos turnos, dependiendo del objetivo que se persiga.\n                            <br>\n                            Por ejemplo en un sistema de multiprogramación se busca maximizar el tiempo de uso del procesador, \n                            mientras que en un sistema de tiempo compartido se busca atender en forma expedita a muchos \n                            usuarios que trabajan interactivamente\n                            <br>\n                        </p>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <img src=\"https://0901.static.prezi.com/preview/v2/a3dplbnzs5dyvocytxuhvxfr3p6jc3sachvcdoaizecfr3dnitcq_3_0.png\" style=\"height: 300px;\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h4>Estados de un proceso</h4>\n                        <p>\n                            Mientras un proceso se ejecuta puede pasar por distintos estados.\n                            <br>\n                        </p>\n                           <h6>En creación:</h6> \n                           <p>\n                            El núcleo está obteniendo los recursos que necesita el proceso para poder correr, como por ejemplo memoria o disco\n                            <br>\n                        </p>\n                        <h6>Corriendo: </h6>\n                        <p> El proceso está en poseción del procesador, el que ejecuta sus instrucciones.</p>\n                        <h6>Esperando (WAIT):</h6> \n                        <p>\n                         El proceso espera que se lea un sector del disco, que llegue un mensaje de \n                            otro proceso, que transcurra un intervalo de tiempo, que termine otro proceso\n                         <br>\n                     </p>\n                     <h6>Listo (READY): </h6>\n                     <p> El proceso está activo pero no está en poseción del procesador.</p>\n                     <h6>Terminado:</h6> \n                     <p>\n                      El proceso terminó su ejecución, pero sigue existiendo para que otros procesos \n                      puedan determinar que terminó.\n                      <br>\n                  </p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <h4>El descriptor de proceso</h4>\n                        <p style=\"text-align: justify;\">\n                            El descriptor de proceso es la estructura de datos que utiliza el núcleo para mantener toda la \n                            información asociada a un proceso.\n                            <br>\n                            El estado del proceso: En creación, listo, corriendo, etc.\n                            <br>\n                            Registros del procesador: Aquí se guardan los valores del contador de programa, del puntero a \n                            la pila y de los registros del procesador real cuando el proceso abandonó el estado corriendo.\n                            <br>\n                            Información para el scheduler: Por ejemplo la prioridad del proceso, punteros de enlace cuando \nel descriptor se encuentra en alguna cola, etc\n                            <br>\n                            Asignación de recursos: Memoria asignada, archivos abiertos, espacio de swapping, etc.\n                            <br>\n                            Contabilización de uso de recurso: Tiempo de procesador consumido y otros\n                        </p>\n                        <p>El núcleo posee algún mecanismo para obtener el descriptor de proceso a partir del identificador del \n                            proceso, que es el que conocen los procesos.\n                            </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-1 atras\">\n                <button class=\"bi bi-caret-right btn btn-info btn btn-block btatras\" (click)=\"OnNext()\"></button>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <button class=\"btn btn-block btn-dark\" (click)=\"OnInicio()\">Inicio</button>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}